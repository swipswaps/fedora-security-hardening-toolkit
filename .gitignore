# Fedora Security Hardening Toolkit - Git Ignore File
# Comprehensive gitignore for Python, security tools, and development

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the .idea directory in version control.
.idea/

# VS Code
.vscode/
*.code-workspace

# Security tool outputs
bandit-report.json
bandit-report.txt
safety-report.json
safety-report.txt
semgrep-report.json
semgrep-report.txt

# Security audit reports (generated by our tools)
security_audit_report_*.json
security_audit_report_*.html
security_validation_*.log
network_hardening_*.log

# Backup files created by security scripts
security_backups_*/
*.backup.*
*.bak

# Log files
*.log
logs/
/var/log/

# Temporary files
*.tmp
*.temp
/tmp/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Linux
*~

# Windows
*.lnk

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Development tools
.pre-commit-config.yaml.bak
.tox/
.nox/
.coverage*
htmlcov/
.pytest_cache/

# Documentation builds
docs/_build/
docs/build/
site/

# Profiling
*.prof
*.lprof

# Database files
*.db
*.sqlite
*.sqlite3

# Configuration files with secrets
config.ini
secrets.yaml
.secrets
credentials.json

# SSH keys and certificates
*.pem
*.key
*.crt
*.csr
id_rsa*
id_ed25519*
known_hosts

# GPG keys
*.gpg
*.asc

# Package manager files
node_modules/
package-lock.json
yarn.lock

# Rust
target/
Cargo.lock

# Go
vendor/
go.sum

# Java
*.class
*.jar
*.war
*.ear

# Docker
.dockerignore
docker-compose.override.yml

# Kubernetes
*.kubeconfig

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Ansible
*.retry
vault_pass.txt

# Cloud provider credentials
.aws/
.azure/
.gcp/

# Local development
.local/
local_settings.py
development.ini

# Performance testing
locustfile.py
.locust/

# Monitoring
prometheus.yml
grafana/

# Backup and archive files
*.zip
*.tar.gz
*.tar.bz2
*.tar.xz
*.7z
*.rar

# Large files that shouldn't be in git
*.iso
*.img
*.vmdk
*.ova
*.ovf

# IDE and editor files
*.sublime-project
*.sublime-workspace
.vscode/
.idea/
*.swp
*.swo

# System files
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Network tools
*.pcap
*.pcapng

# Compliance and audit files
audit_*.xml
compliance_*.json
cis_*.html
nist_*.pdf

# Custom application logs
app.log
error.log
access.log
security.log

# Temporary directories
temp/
tmp/
cache/

# Build artifacts
build/
dist/
*.egg-info/
.eggs/

# Version control
.git/
.svn/
.hg/
.bzr/

# Dependency directories
node_modules/
bower_components/

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
.nyc_output/

# Grunt intermediate storage
.grunt/

# Optional npm cache directory
.npm/

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache
.cache/
.parcel-cache/

# Next.js build output
.next/

# Nuxt.js build / generate output
.nuxt/
dist/

# Gatsby files
.cache/
public/

# Storybook build outputs
.out/
.storybook-out/

# Temporary folders
tmp/
temp/

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov/

# Coverage directory used by tools like istanbul
coverage/

# nyc test coverage
.nyc_output/

# Grunt intermediate storage
.grunt/

# Bower dependency directory
bower_components/

# node-waf configuration
.lock-wscript

# Compiled binary addons
build/Release/

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# Optional npm cache directory
.npm/

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# parcel-bundler cache
.cache/
.parcel-cache/

# next.js build output
.next/

# nuxt.js build output
.nuxt/

# vuepress build output
.vuepress/dist/

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port
