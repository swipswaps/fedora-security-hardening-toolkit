[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "fedora-security-hardening-toolkit"
description = "Comprehensive security hardening toolkit for Fedora Linux systems"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Security Hardening Toolkit Team", email = "security@example.com"}
]
maintainers = [
    {name = "Security Hardening Toolkit Team", email = "security@example.com"}
]
keywords = ["security", "hardening", "fedora", "linux", "cis", "nist"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities"
]
requires-python = ">=3.8"
dependencies = []
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "pylint>=2.15.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=0.991",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pre-commit>=2.20.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "flake8>=5.0.0",
    "flake8-docstrings>=1.6.0",
    "flake8-security>=1.2.0",
    "shellcheck-py>=0.9.0"
]

[project.urls]
Homepage = "https://github.com/security-toolkit/fedora-security-hardening-toolkit"
Documentation = "https://github.com/security-toolkit/fedora-security-hardening-toolkit/blob/main/README.md"
Repository = "https://github.com/security-toolkit/fedora-security-hardening-toolkit"
"Bug Tracker" = "https://github.com/security-toolkit/fedora-security-hardening-toolkit/issues"
Changelog = "https://github.com/security-toolkit/fedora-security-hardening-toolkit/blob/main/CHANGELOG.md"

[project.scripts]
security-audit = "security_audit:main"

[tool.setuptools]
py-modules = ["security_audit"]

[tool.setuptools.dynamic]
version = {file = "VERSION"}

# Black configuration
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["security_audit"]
known_third_party = []

# mypy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

# Coverage configuration
[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.coverage.html]
directory = "htmlcov"

# Bandit security linting configuration
[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]

# Pylint configuration (additional to .pylintrc)
[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-locals",
    "too-many-branches",
    "too-many-statements",
    "line-too-long",
    "invalid-name",
    "broad-except"
]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.design]
max-args = 8
max-locals = 20
max-returns = 8
max-branches = 15
max-statements = 60
