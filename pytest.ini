# Pytest configuration for Fedora Security Hardening Toolkit
# Modern testing configuration with comprehensive options

[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --showlocals
    --durations=10
    --cov=.
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --cov-branch
    --no-cov-on-fail
    --junitxml=junit.xml
    --html=report.html
    --self-contained-html

# Minimum version
minversion = 7.0

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests
    security: Security-related tests
    performance: Performance benchmarks
    slow: Slow running tests
    network: Tests requiring network access
    privileged: Tests requiring root/sudo access
    destructive: Tests that modify system state
    linux_only: Tests that only run on Linux
    fedora_only: Tests specific to Fedora
    requires_fail2ban: Tests requiring fail2ban
    requires_firewalld: Tests requiring firewalld
    requires_ssh: Tests requiring SSH service

# Filtering
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Timeout
timeout = 300
timeout_method = thread

# Parallel execution
# Uncomment to enable parallel testing
# -n auto

# Coverage configuration
[coverage:run]
source = .
omit = 
    tests/*
    setup.py
    noxfile.py
    .tox/*
    .nox/*
    build/*
    dist/*
    __pycache__/*
    *.egg-info/*
    .venv/*
    venv/*
branch = true
parallel = true

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
show_missing = true
skip_covered = false
fail_under = 80
precision = 2

[coverage:html]
directory = htmlcov
title = Fedora Security Hardening Toolkit Coverage Report

[coverage:xml]
output = coverage.xml
